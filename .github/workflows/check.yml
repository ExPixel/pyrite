name: check

permissions:
  contents: read

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 9 * * 5'
  
jobs:
  fmt:
    runs-on: ubuntu-latest
    name: ubuntu / ${{ matrix.toolchain }} / fmt
    strategy:
      fail-fast: false
      matrix:
        toolchain: [stable]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt
      - name: cargo fmt --check
        run: cargo fmt --check

  clippy:
    runs-on: ubuntu-latest
    name: ubuntu / ${{ matrix.toolchain }} / clippy
    permissions:
      contents: read
      checks: write
    strategy:
      fail-fast: false
      matrix:
        toolchain: [stable]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: clippy
      - name: cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  coverage:
    runs-on: ubuntu-latest
    name: ubuntu / ${{ matrix.toolchain }} / coverage
    strategy:
      fail-fast: false
      matrix:
        toolchain: [stable]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install Packages
        run: |
          sudo apt install -y binutils-arm-none-eabi
      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: llvm-tools-preview
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: Restore cached target/
        id: target-cache-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            target
            /home/runner/.cargo
          key: coverage-target
      - name: cargo llvm-cov clean
        run: cargo llvm-cov clean --workspace
      - name: cargo llvm-cov
        run: cargo llvm-cov --locked --all-features --no-report --release --workspace --exclude pyrite
      - name: Save cached target/
        id: target-cache-save
        uses: actions/cache/save@v3
        with:
          path: |
            target
            /home/runner/.cargo
          key: ${{ steps.target-cache-restore.outputs.cache-primary-key }}
      - name: cargo llvm-cov report
        run: cargo llvm-cov report --release --lcov --output-path lcov.info
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true